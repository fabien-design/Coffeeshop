{% extends 'base.html.twig' %} 
{% block title %}Coffeera{% endblock %}
{% block stylesheets %}
<link
  type="text/css"
  rel="stylesheet"
  href="{{ asset('resources/css/lightbrands.css') }}"
/>

<link rel="stylesheet" href="{{ asset('resources/css/base.css') }}" />
<link rel="stylesheet" href="{{ asset('resources/css/admin/admin.css') }}" />
{% endblock %}


{% block headerBody %}
{% include 'admin/includes/sideBar.html.twig' %}
{% endblock %}
{% block body %}

{% include 'Component/Card/_delete_modal.html.twig' with{ 
    'title' : "Delete brand",
    'sentence'  : "Do you really want to delete these records? This process cannot be undone.",
    'path_delete'  : "", 
} only %}   
<script>
function sendNotification(type, text) {
        let notificationBox = document.querySelector(".notification-box");
        const alerts = {
            info: {
            icon: `<svg class="w-6 h-6 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>`,
            color: "blue-500"
            },
            error: {
            icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>`,
            color: "red-500"
            },
            warning: {
            icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
        </svg>`,
            color: "yellow-500"
            },
            success: {
            icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>`,
            color: "green-500"
            }
        };
        let component = document.createElement("div");
        component.className = `relative flex items-center bg-red bg-${alerts[type].color} text-white text-sm font-bold px-4 py-3 rounded-md opacity-0 transform transition-all duration-500 mb-1`;
        component.innerHTML = `${alerts[type].icon}<p>${text}</p>`;
        notificationBox.appendChild(component);
        setTimeout(() => {
            component.classList.remove("opacity-0");
            component.classList.add("opacity-1");
        }, 1); //1ms For fixing opacity on new element
        setTimeout(() => {
            component.classList.remove("opacity-1");
            component.classList.add("opacity-0");
            //component.classList.add("-translate-y-80"); //it's a little bit buggy when send multiple alerts
            component.style.margin = 0;
            component.style.padding = 0;
        }, 5000);
        setTimeout(() => {
            component.style.setProperty("height", "0", "important");
        }, 5100);
        setTimeout(() => {
            notificationBox.removeChild(component);
        }, 5700);
        //If you can do something more elegant than timeouts, please do, but i can't
    }
</script>

<main>
    {% for message in app.flashes('error') %}
        <div class="notification-box flex flex-col items-center justify-center fixed w-full z-50 p-3">
            <!-- Notification container -->
        </div>

        <script>sendNotification('error', {{message|json_encode|raw}})</script>
    {% endfor %}
    
    <div class="btnAddDiv"><a href="{{path('admin_brands_create')}}" class="btnAdd">Add</a></div>
    <table class="pt-[100px]">
    <caption>Brand List</caption>
    <thead>
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Number of cafes</th>
            <th scope="col">Action</th>
        </tr>
    </thead>
    <tbody>
        {% set i = 0 %}
        {% for brand in listBrand %}
            {% if i is same as(0) %}
                <tr>
                    <td data-label="Name">{{brand.getName}}</td>
                    <td data-label="Number of cafes">{{brand.getProducts|length}}</td>
                    <td data-label="Action" class="tdAction">
                        <div class="divBtnAction">
                            <a href="{{path('admin_brands_edit', {'id': brand.getId})}}" class="btnEdit">Edit</a>
                            {% if brand.getProducts|length == 0 %}
                                <button data-path="{{ path('admin_brands_delete', {'id': brand.getId}) }}" class="btnDelete">Delete</button>
                            {% endif %}
                        </div>
                    </td>
                </tr>
            {% else %}
                <tr>
                    <td data-label="Name">{{brand.getName}}</td>
                    <td data-label="Number of cafes">{{brand.getProducts|length}}</td>
                    <td data-label="Action" class="tdAction">
                        <div class="divBtnAction">
                            <a href="{{path('admin_brands_edit', {'id': brand.getId})}}" class="btnEdit">Edit</a>
                            {% if brand.getProducts|length == 0 %}
                                <button data-path="{{ path('admin_brands_delete', {'id': brand.getId}) }}" class="btnDelete">Delete</button>
                            {% endif %}
                        </div>
                    </td>
                </tr>
            {% endif %}
            {% set i = i + 1 %}
        {% endfor %}
    
    </tbody>
    </table>
</main>

<script>
    $(document).ready(function () {
        // Gestionnaire de clic pour les boutons de suppression
        $('.btnDelete').on('click', function () {
            // Récupérer les données du bouton cliqué
            var pathDelete = $(this).data('path');
            $('#pathToDelete').attr('href', pathDelete);
            $('#myModal').addClass('show');
        });
    });

    
</script>


{% endblock %}

{% block footer %}
    
{% endblock %}
{% block contactForm %}
{% endblock %}